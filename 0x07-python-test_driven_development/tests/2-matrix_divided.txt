The ''2-matrix_divided'' module
===============================

Import function:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Begin testing:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1)
[[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "string")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 'F', '9'], [0, 7, 1]], 9)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 7]], 8)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([1, 9, 8, 7], 8)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [1, 3, 9]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided('Good Job', 7)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1, 2], [4, 5]], 3, 8)
Traceback (most recent call last):
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> matrix_divided([[2, 3], [4, 5]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0]]
>>> print(matrix)
[[1, 2, 3]]
